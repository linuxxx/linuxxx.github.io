<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>pixel 3a（sargo）刷机</title>
    <link href="/2022/02/24/yuque/pixel%203a%EF%BC%88sargo%EF%BC%89%E5%88%B7%E6%9C%BA/"/>
    <url>/2022/02/24/yuque/pixel%203a%EF%BC%88sargo%EF%BC%89%E5%88%B7%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="twrp-官网-devices-下载对应版本的-twrp-img-和-zip"><a href="#twrp-官网-devices-下载对应版本的-twrp-img-和-zip" class="headerlink" title="twrp 官网 devices 下载对应版本的 twrp img 和 zip"></a>twrp 官网 devices 下载对应版本的 twrp img 和 zip</h1><p>img 为临时 twrp<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2744235/1645668514390-78640d53-cba7-43a9-b36b-d6e45fc790c9.png#clientId=u255e42db-bb00-4&from=paste&height=361&id=ud13a490e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=721&originWidth=830&originalType=binary%E2%88%B6=1&size=112655&status=done&style=none&taskId=u7cbf71eb-5417-422e-945d-b61c355f65f&width=415" alt="image.png"><br>选择最后一个。3.6.0 测试会失败，原因未知。</p><h1 id="adb-reboot-bootloader-在-bootloader-模式下"><a href="#adb-reboot-bootloader-在-bootloader-模式下" class="headerlink" title="adb reboot bootloader 在 bootloader 模式下"></a>adb reboot bootloader 在 bootloader 模式下</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">PS E:\rom\twrp&gt; fastboot boot .\twrp-<span class="hljs-number">3.3</span><span class="hljs-number">.1</span>-<span class="hljs-number">0</span>-sargo.img<br>Sending <span class="hljs-string">&#x27;boot.img&#x27;</span> (<span class="hljs-number">65536</span> KB)                      OKAY [  <span class="hljs-number">2.</span>012s]<br>Booting                                            OKAY [  <span class="hljs-number">5.</span>911s]<br>Finished. Total time: <span class="hljs-number">7.</span>970s<br></code></pre></td></tr></table></figure><h1 id="adb-push-zip-到-x2F-sdcard"><a href="#adb-push-zip-到-x2F-sdcard" class="headerlink" title="adb push zip 到&#x2F;sdcard"></a>adb push zip 到&#x2F;sdcard</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">PS E:\rom\twrp&gt; adb push .\twrp-installer-<span class="hljs-number">3.3</span><span class="hljs-number">.1</span>-<span class="hljs-number">1</span>-sargo.zip /sdcard<br>.\twrp-installer-<span class="hljs-number">3.3</span><span class="hljs-number">.1</span>-<span class="hljs-number">1</span>-sargo.zip: <span class="hljs-number">1</span> file pushed, <span class="hljs-number">0</span> skipped. <span class="hljs-number">69.3</span> MB/s (<span class="hljs-number">10103558</span> bytes in <span class="hljs-number">0.</span>139s)<br>PS E:\rom\twrp&gt;<br></code></pre></td></tr></table></figure><h1 id="在-twrp-中-install-选择-zip-包进行安装"><a href="#在-twrp-中-install-选择-zip-包进行安装" class="headerlink" title="在 twrp 中 install 选择 zip 包进行安装"></a>在 twrp 中 install 选择 zip 包进行安装</h1><p>reboot system， 选择 do not install ok 完成~ twrp 的输入<br>​</p><h1 id="安装面具"><a href="#安装面具" class="headerlink" title="安装面具"></a>安装面具</h1><p>安装 magisk.apk . 选择修补一个文件，选择 rom 解压出来的 boot.img<br>修补后会在 boot.img 的同文件夹下生成一个 magisk_patched.img 文件，传回电脑<br>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">adb reboot bootloader<br>fastboot flash boot magisk_patched-23000_PUUwu.img<br>fastboot reboot<br></code></pre></td></tr></table></figure><p>安装 magisk<br>完成~<br>​</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>快手web解密</title>
    <link href="/2022/02/16/yuque/%E5%BF%AB%E6%89%8Bweb%E8%A7%A3%E5%AF%86/"/>
    <url>/2022/02/16/yuque/%E5%BF%AB%E6%89%8Bweb%E8%A7%A3%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<p></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"># 映射表 网页字符：明文<br><span class="hljs-keyword">import</span> re<br>from io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-keyword">import</span> requests<br><br>from fontTools.ttLib <span class="hljs-keyword">import</span> <span class="hljs-type">TTFont</span><br><br><span class="hljs-variable">fontCdnUrl</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://tx2.a.kwimgs.com/kos/nlav10312/mdata/pkg/kwai-font/fontscn_28937141.ttf&quot;</span><br>key_map = &#123;&#125;<br># 动态获取字体<br>font_content = requests.get(fontCdnUrl).<span class="hljs-type">content</span><br><span class="hljs-variable">font</span> <span class="hljs-operator">=</span> TTFont(BytesIO(font_content))  # 从内存加载<br>code = font.getGlyphOrder()[<span class="hljs-number">1</span>:]  # 固定顺序的字符编码列表（去除第一个无效字符）<br>nums = [  # 固定顺序明文列表<br>    <span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>,<br>    <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&#x27;+&#x27;</span><br>]<br>temp = dict(zip(code, nums))  # 临时映射（固定顺序），字符编码uni****：明文<br>res = font.getBestCmap()  # 获取关键映射，网页字符转码：字符编码uni****<br><span class="hljs-keyword">for</span> k, v in res.items():<br>    # 网页字符去除前缀，再从<span class="hljs-number">16</span>进制转<span class="hljs-number">10</span>进制，就得到k，这里逆向写，即k转<span class="hljs-number">16</span>进制后拼接前缀<br>    kk = <span class="hljs-string">&#x27;&amp;#&#x27;</span> + str(hex(k))[<span class="hljs-number">1</span>:]<br>    # 从临时映射中根据字符编码uni****取出明文<br>    key_map[kk] = temp[v]<br># print(len(key_map), key_map)<br>re_html_code = re.compile(r<span class="hljs-string">&#x27;&amp;#x[\da-f]&#123;4&#125;&#x27;</span>)<br># <span class="hljs-keyword">for</span> word in [<span class="hljs-string">&#x27;fan&#x27;</span>, <span class="hljs-string">&#x27;follow&#x27;</span>, <span class="hljs-string">&#x27;photo&#x27;</span>, <span class="hljs-string">&#x27;collect&#x27;</span>]:  # 遍历需要用到的字体加密的参数<br>text = <span class="hljs-string">&quot;&quot;</span><br>words = re_html_code.findall(text)<br>result = <span class="hljs-string">&#x27;&#x27;</span>.join(key_map[i] <span class="hljs-keyword">for</span> i in words)<br><br>print(result)<br></code></pre></td></tr></table></figure><p>参考：吾爱破解的文章</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>应该可以了吧</title>
    <link href="/2022/02/15/yuque/%E5%BA%94%E8%AF%A5%E5%8F%AF%E4%BB%A5%E4%BA%86%E5%90%A7/"/>
    <url>/2022/02/15/yuque/%E5%BA%94%E8%AF%A5%E5%8F%AF%E4%BB%A5%E4%BA%86%E5%90%A7/</url>
    
    <content type="html"><![CDATA[<p>— title: java之如何使当前程序使用代理<br>description:<br>tags:[java, 代理]categories: java参考链接java中设置网络代理——简书@jijs java之如何使当前程序使用代理概述java中支持的代理java中支持 HTTP代理、HTTPS代理、Socket代理、FTP代理 。&lt;!–more–&gt;程序中编写程序…<br>date: 2019-05-05 12:13:10 +0800<br>tags: [] </p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试下自动发布有没有变化</title>
    <link href="/2022/02/15/yuque/%E6%B5%8B%E8%AF%95%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83%E6%9C%89%E6%B2%A1%E6%9C%89%E5%8F%98%E5%8C%96/"/>
    <url>/2022/02/15/yuque/%E6%B5%8B%E8%AF%95%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83%E6%9C%89%E6%B2%A1%E6%9C%89%E5%8F%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>测试下自动发布有没有变化<br>12321</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>playwright python实践经验</title>
    <link href="/2022/02/15/yuque/playwright%20python%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/"/>
    <url>/2022/02/15/yuque/playwright%20python%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h1><ul><li>query_selector(engine&#x3D;body) # 选择单个元素</li><li>query_selectorAll(engine&#x3D;body) # 选择多个元素</li><li>wait_for_selector(engine&#x3D;body) # 选择单个元素，并且自动等待到元素可见、可操作</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-number">1.</span> 以 <span class="hljs-comment">// 或 / 或者 .. 开头的，判断为xpath</span><br><br>pp = page.query_selector(<span class="hljs-string">&quot;xpath=//h2&quot;</span>)<br><br>pp = page.query_selector(<span class="hljs-string">&quot;//h2&quot;</span>)<br><br><span class="hljs-number">2.</span> 以引号 <span class="hljs-string">&quot;&quot;</span> 或者 <span class="hljs-string">&#x27; 开头的，判断为text</span><br><span class="hljs-string"></span><br><span class="hljs-string">ppp = page.query_selector(&quot;text=文本输入&quot;) \</span><br><span class="hljs-string"></span><br><span class="hljs-string">ppp = page.query_selector(&quot;&#x27;</span>文本输入<span class="hljs-string">&#x27;&quot;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">注意：双引号里有一个单引号，不然无法识别</span><br><span class="hljs-string"></span><br><span class="hljs-string">3. 其他的，都判断为css</span><br><span class="hljs-string"></span><br><span class="hljs-string">p = page.query_selector(&quot;css=h2&quot;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">p = page.query_selector(&quot;h2&quot;)</span><br></code></pre></td></tr></table></figure><h1 id="打印元素-html，方便定位测试"><a href="#打印元素-html，方便定位测试" class="headerlink" title="打印元素 html，方便定位测试"></a>打印元素 html，方便定位测试</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>element_handle.inner_html()<br>returns: &lt;str&gt;#<br>Returns the element.innerHTML.<br>element_handle.inner_text()<br></code></pre></td></tr></table></figure><p>​</p><p>参考：<a href="http://blog.itpub.net/69942496/viewspace-2765795/">http://blog.itpub.net/69942496/viewspace-2765795/</a><br>​</p><h1 id="如何使用-mobile-仿真模式，支持-touch-事件"><a href="#如何使用-mobile-仿真模式，支持-touch-事件" class="headerlink" title="如何使用 mobile 仿真模式，支持 touch 事件"></a>如何使用 mobile 仿真模式，支持 touch 事件</h1><h3 id="puppeteer"><a href="#puppeteer" class="headerlink" title="puppeteer"></a><a href="https://github.com/puppeteer/puppeteer">puppeteer</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">const</span> <span class="hljs-variable">devtoolsProtocolClient</span> <span class="hljs-operator">=</span> await page.target().createCDPSession();<br>await devtoolsProtocolClient.send(<span class="hljs-string">&quot;Emulation.setEmitTouchEventsForMouse&quot;</span>, &#123; enabled: <span class="hljs-literal">true</span> &#125;);<br></code></pre></td></tr></table></figure><h3 id="playwright"><a href="#playwright" class="headerlink" title="playwright"></a>playwright</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">client = page.context.new_cdp_session(page)<br>client.send(<span class="hljs-string">&quot;Emulation.setEmitTouchEventsForMouse&quot;</span>,&#123;<span class="hljs-string">&quot;enabled&quot;</span>:True&#125;)<br></code></pre></td></tr></table></figure><p>参考：<a href="https://github.com/puppeteer/puppeteer/issues/1079">https://github.com/puppeteer/puppeteer/issues/1079</a><br>​</p><h1 id="执行-js"><a href="#执行-js" class="headerlink" title="执行 js"></a>执行 js</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">page.evaluate(<span class="hljs-string">&quot;success()&quot;</span>)<br>page.evaluate(<span class="hljs-string">&#x27;document.querySelectorAll(&quot;.add&quot;)[&#x27;</span> + str(i) + <span class="hljs-string">&#x27;].click()&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>平头哥sshdroid实践</title>
    <link href="/2022/02/14/yuque/%E5%B9%B3%E5%A4%B4%E5%93%A5sshdroid%E5%AE%9E%E8%B7%B5/"/>
    <url>/2022/02/14/yuque/%E5%B9%B3%E5%A4%B4%E5%93%A5sshdroid%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="平头哥-sshdroid-实践"><a href="#平头哥-sshdroid-实践" class="headerlink" title="平头哥 sshdroid 实践"></a>平头哥 sshdroid 实践</h1><p>给 android app 提供的一个 sshd 服务，起主要作用是提供一个交互式的 shell 工具，<br>我们可以通过他访问 app 的内部数据文件。</p><ul><li>修改 app&#x2F;src&#x2F;main&#x2F;assets&#x2F;config.properties 的包名</li><li>安装插件</li><li>adb forward tcp:3479 tcp:3479</li><li>ssh 127.0.0.1 -p 3479 登陆 shell</li><li>cd &#x2F;data&#x2F;user&#x2F;0&#x2F;com.smile.gifmaker&#x2F;app_ratel_env_mock</li><li>ls</li></ul><p>enjoy~<br>​</p><p>​</p><p>​</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ja3深入研究</title>
    <link href="/2022/02/10/yuque/ja3%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6/"/>
    <url>/2022/02/10/yuque/ja3%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6/</url>
    
    <content type="html"><![CDATA[<p>ja3 深入研究</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>unidgb学习到实践</title>
    <link href="/2022/02/10/yuque/unidgb%E5%AD%A6%E4%B9%A0%E5%88%B0%E5%AE%9E%E8%B7%B5/"/>
    <url>/2022/02/10/yuque/unidgb%E5%AD%A6%E4%B9%A0%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<p>unidgb 学习到实践 1<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2744235/1644484616898-4dc7905d-0eac-40fc-bc40-e8fc8a535ba5.png#clientId=u4f3d3007-3e9a-4&from=paste&height=144&id=u5c0fed53&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=526&originalType=binary%E2%88%B6=1&size=17435&status=done&style=none&taskId=u460f3153-af24-44ae-8f9e-eaf1a1db980&width=263" alt="image.png"><br>111</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>语雀自动发布hexo</title>
    <link href="/2022/02/10/yuque/%E8%AF%AD%E9%9B%80%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83hexo/"/>
    <url>/2022/02/10/yuque/%E8%AF%AD%E9%9B%80%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="语语雀自动发布-hexo"><a href="#语语雀自动发布-hexo" class="headerlink" title="语语雀自动发布 hexo"></a>语语雀自动发布 hexo</h1><p>测试正文！<br>参考文章:<a href="https://yichen115.github.io/2020/07/16/gtb5ck/">https://yichen115.github.io/2020/07/16/gtb5ck/</a> 感谢！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
